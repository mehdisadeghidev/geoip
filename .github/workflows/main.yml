name: GeoIP

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download files
        run: |
          wget -O GeoLite2-Country-Locations-en.csv https://github.com/PrxyHunter/GeoLite2/releases/latest/download/GeoLite2-Country-Locations-en.csv
          wget -O GeoLite2-Country-Blocks-IPv4.csv https://github.com/PrxyHunter/GeoLite2/releases/latest/download/GeoLite2-Country-Blocks-IPv4.csv
          wget -O GeoLite2-Country-Blocks-IPv6.csv https://github.com/PrxyHunter/GeoLite2/releases/latest/download/GeoLite2-Country-Blocks-IPv6.csv
      - name: Compress files into a ZIP
        run: |
          zip GeoLite2-Country-CSV.zip GeoLite2-Country-Locations-en.csv GeoLite2-Country-Blocks-IPv4.csv GeoLite2-Country-Blocks-IPv6.csv
      - name: Set release name
        id: set_release_name
        run: echo "::set-env name=RELEASE_NAME::$(date +'%Y.%m.%d')"
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: ${{ env.RELEASE_NAME }}
          draft: false
          prerelease: false
      - name: Upload ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./GeoLite2-Country-CSV.zip
          asset_name: GeoLite2-Country-CSV.zip
          asset_content_type: application/zip